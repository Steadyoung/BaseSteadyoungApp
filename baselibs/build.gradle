apply plugin: 'com.android.library'

android {

    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        minSdkVersion       rootProject.ext.android["minSdkVersion"]
        targetSdkVersion    rootProject.ext.android["targetSdkVersion"]
        versionCode         rootProject.ext.android["versionCode"]
        versionName         rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //分包
    api rootProject.ext.dependencies["multidex"]

//    api rootProject.ext.dependencies["retrofit"]
//    api rootProject.ext.dependencies["retrofit-converter-gson"]
//    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    //okhttp3
    api rootProject.ext.dependencies["okhttp3_logging"]
    //okgo
    api rootProject.ext.dependencies["okgo"]

    api rootProject.ext.dependencies["rxandroid2"]
    api rootProject.ext.dependencies["rxjava2"]

    api rootProject.ext.dependencies["rxlifecycle2"]
    api rootProject.ext.dependencies["rxlifecycle2-components"]

    //下拉刷新 上拉加载框架
    api rootProject.ext.dependencies["smartrefresh"]

    //内存检测工具LeakCanary
    debugApi rootProject.ext.dependencies["canary-debug"]
    releaseApi rootProject.ext.dependencies["canary-release"]

    //http拦截器
    debugApi rootProject.ext.dependencies["chuck"]
    releaseApi rootProject.ext.dependencies["chuck-no-op"]

    api project(':commonlibs')
}
